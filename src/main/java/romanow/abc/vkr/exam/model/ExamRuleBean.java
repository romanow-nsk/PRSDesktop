/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package romanow.abc.vkr.exam.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
/**
 * ExamRuleBean
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-01T14:56:15.142+07:00[Asia/Novosibirsk]")
public class ExamRuleBean {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("duration")
  private Integer duration = null;

  @SerializedName("minimalSemesterRating")
  private Integer minimalSemesterRating = null;

  @SerializedName("minimalExamRating")
  private Integer minimalExamRating = null;

  @SerializedName("maximumExamRating")
  private Integer maximumExamRating = null;

  @SerializedName("singleQuestionDefaultRating")
  private Integer singleQuestionDefaultRating = null;

  @SerializedName("singleExerciseDefaultRating")
  private Integer singleExerciseDefaultRating = null;

  @SerializedName("questionsRatingSum")
  private Integer questionsRatingSum = null;

  @SerializedName("exercisesRatingSum")
  private Integer exercisesRatingSum = null;

  @SerializedName("disciplineId")
  private Long disciplineId = null;

  @SerializedName("themeIds")
  private List<Long> themeIds = null;

  public ExamRuleBean id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ExamRuleBean name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ExamRuleBean duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public ExamRuleBean minimalSemesterRating(Integer minimalSemesterRating) {
    this.minimalSemesterRating = minimalSemesterRating;
    return this;
  }

   /**
   * Get minimalSemesterRating
   * @return minimalSemesterRating
  **/
  @Schema(description = "")
  public Integer getMinimalSemesterRating() {
    return minimalSemesterRating;
  }

  public void setMinimalSemesterRating(Integer minimalSemesterRating) {
    this.minimalSemesterRating = minimalSemesterRating;
  }

  public ExamRuleBean minimalExamRating(Integer minimalExamRating) {
    this.minimalExamRating = minimalExamRating;
    return this;
  }

   /**
   * Get minimalExamRating
   * @return minimalExamRating
  **/
  @Schema(description = "")
  public Integer getMinimalExamRating() {
    return minimalExamRating;
  }

  public void setMinimalExamRating(Integer minimalExamRating) {
    this.minimalExamRating = minimalExamRating;
  }

  public ExamRuleBean maximumExamRating(Integer maximumExamRating) {
    this.maximumExamRating = maximumExamRating;
    return this;
  }

   /**
   * Get maximumExamRating
   * @return maximumExamRating
  **/
  @Schema(description = "")
  public Integer getMaximumExamRating() {
    return maximumExamRating;
  }

  public void setMaximumExamRating(Integer maximumExamRating) {
    this.maximumExamRating = maximumExamRating;
  }

  public ExamRuleBean singleQuestionDefaultRating(Integer singleQuestionDefaultRating) {
    this.singleQuestionDefaultRating = singleQuestionDefaultRating;
    return this;
  }

   /**
   * Get singleQuestionDefaultRating
   * @return singleQuestionDefaultRating
  **/
  @Schema(description = "")
  public Integer getSingleQuestionDefaultRating() {
    return singleQuestionDefaultRating;
  }

  public void setSingleQuestionDefaultRating(Integer singleQuestionDefaultRating) {
    this.singleQuestionDefaultRating = singleQuestionDefaultRating;
  }

  public ExamRuleBean singleExerciseDefaultRating(Integer singleExerciseDefaultRating) {
    this.singleExerciseDefaultRating = singleExerciseDefaultRating;
    return this;
  }

   /**
   * Get singleExerciseDefaultRating
   * @return singleExerciseDefaultRating
  **/
  @Schema(description = "")
  public Integer getSingleExerciseDefaultRating() {
    return singleExerciseDefaultRating;
  }

  public void setSingleExerciseDefaultRating(Integer singleExerciseDefaultRating) {
    this.singleExerciseDefaultRating = singleExerciseDefaultRating;
  }

  public ExamRuleBean questionsRatingSum(Integer questionsRatingSum) {
    this.questionsRatingSum = questionsRatingSum;
    return this;
  }

   /**
   * Get questionsRatingSum
   * @return questionsRatingSum
  **/
  @Schema(description = "")
  public Integer getQuestionsRatingSum() {
    return questionsRatingSum;
  }

  public void setQuestionsRatingSum(Integer questionsRatingSum) {
    this.questionsRatingSum = questionsRatingSum;
  }

  public ExamRuleBean exercisesRatingSum(Integer exercisesRatingSum) {
    this.exercisesRatingSum = exercisesRatingSum;
    return this;
  }

   /**
   * Get exercisesRatingSum
   * @return exercisesRatingSum
  **/
  @Schema(description = "")
  public Integer getExercisesRatingSum() {
    return exercisesRatingSum;
  }

  public void setExercisesRatingSum(Integer exercisesRatingSum) {
    this.exercisesRatingSum = exercisesRatingSum;
  }

  public ExamRuleBean disciplineId(Long disciplineId) {
    this.disciplineId = disciplineId;
    return this;
  }

   /**
   * Get disciplineId
   * @return disciplineId
  **/
  @Schema(description = "")
  public Long getDisciplineId() {
    return disciplineId;
  }

  public void setDisciplineId(Long disciplineId) {
    this.disciplineId = disciplineId;
  }

  public ExamRuleBean themeIds(List<Long> themeIds) {
    this.themeIds = themeIds;
    return this;
  }

  public ExamRuleBean addThemeIdsItem(Long themeIdsItem) {
    if (this.themeIds == null) {
      this.themeIds = new ArrayList<Long>();
    }
    this.themeIds.add(themeIdsItem);
    return this;
  }

   /**
   * Get themeIds
   * @return themeIds
  **/
  @Schema(description = "")
  public List<Long> getThemeIds() {
    return themeIds;
  }

  public void setThemeIds(List<Long> themeIds) {
    this.themeIds = themeIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExamRuleBean examRuleBean = (ExamRuleBean) o;
    return Objects.equals(this.id, examRuleBean.id) &&
        Objects.equals(this.name, examRuleBean.name) &&
        Objects.equals(this.duration, examRuleBean.duration) &&
        Objects.equals(this.minimalSemesterRating, examRuleBean.minimalSemesterRating) &&
        Objects.equals(this.minimalExamRating, examRuleBean.minimalExamRating) &&
        Objects.equals(this.maximumExamRating, examRuleBean.maximumExamRating) &&
        Objects.equals(this.singleQuestionDefaultRating, examRuleBean.singleQuestionDefaultRating) &&
        Objects.equals(this.singleExerciseDefaultRating, examRuleBean.singleExerciseDefaultRating) &&
        Objects.equals(this.questionsRatingSum, examRuleBean.questionsRatingSum) &&
        Objects.equals(this.exercisesRatingSum, examRuleBean.exercisesRatingSum) &&
        Objects.equals(this.disciplineId, examRuleBean.disciplineId) &&
        Objects.equals(this.themeIds, examRuleBean.themeIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, duration, minimalSemesterRating, minimalExamRating, maximumExamRating, singleQuestionDefaultRating, singleExerciseDefaultRating, questionsRatingSum, exercisesRatingSum, disciplineId, themeIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExamRuleBean {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    minimalSemesterRating: ").append(toIndentedString(minimalSemesterRating)).append("\n");
    sb.append("    minimalExamRating: ").append(toIndentedString(minimalExamRating)).append("\n");
    sb.append("    maximumExamRating: ").append(toIndentedString(maximumExamRating)).append("\n");
    sb.append("    singleQuestionDefaultRating: ").append(toIndentedString(singleQuestionDefaultRating)).append("\n");
    sb.append("    singleExerciseDefaultRating: ").append(toIndentedString(singleExerciseDefaultRating)).append("\n");
    sb.append("    questionsRatingSum: ").append(toIndentedString(questionsRatingSum)).append("\n");
    sb.append("    exercisesRatingSum: ").append(toIndentedString(exercisesRatingSum)).append("\n");
    sb.append("    disciplineId: ").append(toIndentedString(disciplineId)).append("\n");
    sb.append("    themeIds: ").append(toIndentedString(themeIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
