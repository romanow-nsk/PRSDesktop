/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package romanow.abc.vkr.exam.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * FullTaskBean
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-01T14:56:15.142+07:00[Asia/Novosibirsk]")
public class FullTaskBean {
  @SerializedName("task")
  private TaskBean task = null;

  @SerializedName("artefact")
  private ArtefactBean artefact = null;

  public FullTaskBean task(TaskBean task) {
    this.task = task;
    return this;
  }

   /**
   * Get task
   * @return task
  **/
  @Schema(description = "")
  public TaskBean getTask() {
    return task;
  }

  public void setTask(TaskBean task) {
    this.task = task;
  }

  public FullTaskBean artefact(ArtefactBean artefact) {
    this.artefact = artefact;
    return this;
  }

   /**
   * Get artefact
   * @return artefact
  **/
  @Schema(description = "")
  public ArtefactBean getArtefact() {
    return artefact;
  }

  public void setArtefact(ArtefactBean artefact) {
    this.artefact = artefact;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullTaskBean fullTaskBean = (FullTaskBean) o;
    return Objects.equals(this.task, fullTaskBean.task) &&
        Objects.equals(this.artefact, fullTaskBean.artefact);
  }

  @Override
  public int hashCode() {
    return Objects.hash(task, artefact);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullTaskBean {\n");
    
    sb.append("    task: ").append(toIndentedString(task)).append("\n");
    sb.append("    artefact: ").append(toIndentedString(artefact)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
